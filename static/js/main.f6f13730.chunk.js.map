{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","Addtask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","AddTask","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6f13730.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    \r\n    return (\r\n    <button onClick={onClick} style={{ \r\n        backgroundColor: color }} \r\n        className='btn'>\r\n        {text}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes ={\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport{useLocation} from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd} ) => {\r\n    const location= useLocation ()\r\n\r\n\r\n      return(\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n           {location.pathname === '/' && (\r\n           <Button \r\n            color={showAdd ? 'red' : 'green'} \r\n            text={showAdd ? 'Close' :'Add'}\r\n            onClick={onAdd} \r\n            />\r\n           )}\r\n        </header>\r\n    )\r\n     \r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\n Header.propTypes = {\r\n     title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = { \r\n//     color: 'red', \r\n//     backgroundColor: 'black'\r\n// }\r\n\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\nreturn (\r\n <div className={`task ${task.reminder ? \r\n'reminder' :''}`} \r\nonDoubleClick={() => onToggle(task.id)}\r\n>\r\n     <h3>\r\n        {task.text}{' '}\r\n         <FaTimes\r\n          style={{ color:'red', cursor: \r\n          'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n          />\r\n      </h3>\r\n    <p>{task.day}</p>    \r\n    </div>\r\n    )\r\n\r\n }\r\n \r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete , onToggle }) => {\r\n    return (\r\n    <>\r\n        {tasks.map((task, index)  => (\r\n         <Task key={index}  task={task}\r\n         onDelete={onDelete} \r\n         onToggle={onToggle}\r\n         />\r\n         ))}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst Addtask =({onAdd}) => {\r\nconst [text, setText] = useState('');\r\nconst [day, setDay] = useState('');\r\nconst [reminder, setReminder] = useState(false);\r\n\r\nconst onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!text) {\r\n        alert(' Please add a task');\r\n        return;\r\n    }\r\n\r\n    onAdd({text, day, reminder});\r\n\r\n    setText(' ');\r\n    setDay(' ');\r\n    setReminder(' false');\r\n\r\n}\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text'\r\n                    placeholder='Add Task' \r\n                    value={text} \r\n                    onChange={(e) =>setText(e.target.value)}  \r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day &amp; Time</label>\r\n                <input type='text' placeholder='Add Day &amp; Time' value={day} onChange={(e) =>setDay(e.target.value)} />\r\n                </div>\r\n            \r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input\r\n                type='checkbox'\r\n                 checked={reminder} \r\n                onChange={(e) =>setReminder(e.currentTarget.checked)} \r\n                />\r\n                </div>\r\n\r\n                <input type='submit' value='Save Task' \r\n                className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import { Link } from 'react-router-dom'\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\n\n\n const App = () => {\n   const [showAddTask, setShowAddTask]= useState(false)\n  const [ tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks =async () => {\n      const tasksFromServer  = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    \n\n    getTasks()\n  }, [])\n    \n  // fetch Tasks\n  const fetchTasks =async() =>{\n    const res =await fetch ('http://localhost:5000/tasks')\n    const data = await res.json()\n\n\nreturn data\n  }\n  \n\n    // Add Task\n    const addTask = async (task) =>{\n      const res= await fetch ('http://localhost:5000/tasks', {\n        method:'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n\n      })\n\n      const data = await res.json()\n\n      setTasks([...tasks, data])\n      \n      //  const id= Math.floor(Math.random() *\n      // 10000) + 1\n      // const newTask ={ id, ...task }\n      // setTasks([...tasks, newTask])\n\n\n    }\n\n    // Delete task\n    const deleteTask = async (id) => {\n      await fetch(`http://localhost:5000/tasks/${id}`,{\n        method: 'DELETE'\n      })\n\n      setTasks(tasks.filter((task) => task.id !== \n      id))\n    }\n\n    // Toggle Reminder\n    const toggleReminder = async (id) => {\n      const taskToToggle = await fetchTasks(id)\n      const updTask = { ...taskToToggle, \n      reminder: !taskToToggle.reminder}\n\n      const res = await  fetch(`http://localhost:5000/tasks${id}`, {\n      method:'PUT',\n      headers:  {\n        'Content-type': 'application/json',  \n    },\n    body: JSON.stringify(updTask),\n\n      })\n\n      const data =await res.json()\n\n    setTasks(\n      tasks.map((task)  =>\n       task.id === id ? {...task, reminder:\n        data.reminder } : task\n     )\n    )  \n  }\n\n  return (\n    <Router>\n    <div className= 'container'>\n      <Header \n      onAdd={() => setShowAddTask\n         (!showAddTask)} \n         showAdd={showAddTask} \n         />\n      \n      <Route path='/' exact render={(props) =>(\n        <>\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? (\n            <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n          ) : (\n            'No Tasks To Show'\n          )}\n        </>\n      )} />\n      <Route path='/about' component={About}/>\n      <Footer />\n      </div>\n      </Router>\n\n  )\n} \n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}